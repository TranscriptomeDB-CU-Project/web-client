name: Deploy web image

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      packages: write
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history for tags
          persist-credentials: false # avoid checking out the repository again

      - name: Set default tag name
        run: echo "TAG_NAME=${{ github.ref_name }}" | tee $GITHUB_ENV

      - name: Semantic Release
        if: github.ref == 'refs/heads/main'
        id: semantic   # Need an `id` for output variables
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set new tag when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: echo "TAG_NAME=${{ steps.semantic.outputs.new_release_version }}" | tee $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/transcriptomedb-cu-project/tcp-web-client:${{ env.TAG_NAME }}
